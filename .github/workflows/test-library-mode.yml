name: Test Nv-Ingest Library Mode

on:
  #workflow_run:
  #  workflows:
  #    - Build Conda Packages
  #  types:
  #    - completed
  push:
    branches:
      - edwardk/ci-integ-libmode  # remove later

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true

      - name: Install Conda
        shell: bash -el {0}
        run: |
          conda create -y --name nvingest python=3.10
          conda activate nvingest
          conda install -y -c ./conda/output_conda_channel/linux-64 -c rapidsai -c conda-forge -c nvidia nv_ingest nv_ingest_api nv_ingest_client
          $CONDA/envs/nvingest/bin/python -m pip install opencv-python llama-index-embeddings-nvidia pymilvus 'pymilvus[bulk_writer, model]' milvus-lite nvidia-riva-client unstructured-client

      - name: Run integration test
        env:
          AUDIO_FUNCTION_ID: ${{ secrets.AUDIO_FUNCTION_ID }}
          EMBEDDING_NIM_MODEL_NAME: ${{ secrets.EMBEDDING_NIM_MODEL_NAME }}
          NEMORETRIEVER_PARSE_MODEL_NAME: ${{ secrets.NEMORETRIEVER_PARSE_MODEL_NAME }}
          NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
          NVIDIA_BUILD_API_KEY: ${{ secrets.NVIDIA_BUILD_API_KEY }}
          PADDLE_HTTP_ENDPOINT: ${{ secrets.PADDLE_HTTP_ENDPOINT }}
          VLM_CAPTION_ENDPOINT: ${{ secrets.VLM_CAPTION_ENDPOINT }}
          VLM_CAPTION_MODEL_NAME: ${{ secrets.VLM_CAPTION_MODEL_NAME }}
          YOLOX_GRAPHIC_ELEMENTS_HTTP_ENDPOINT: ${{ secrets.YOLOX_GRAPHIC_ELEMENTS_HTTP_ENDPOINT }}
          YOLOX_HTTP_ENDPOINT: ${{ secrets.YOLOX_HTTP_ENDPOINT }}
          YOLOX_TABLE_STRUCTURE_HTTP_ENDPOINT: ${{ secrets.YOLOX_TABLE_STRUCTURE_HTTP_ENDPOINT }}
        shell: bash -el {0}
        run: |
          echo 'Running tests...'
          $CONDA/envs/nvingest/bin/python -m pytest -rsx tests/integration
