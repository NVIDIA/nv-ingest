# Default Ingestion Pipeline Configuration
# This file replicates the static pipeline defined in pipeline_builders.py

name: "NVIngest default pipeline"
description: "This is the default ingestion pipeline for NVIngest"
stages:
  # Source
  - name: "source_stage"
    type: "source"
    phase: 0  # PRE_PROCESSING
    actor: "nv_ingest.framework.orchestration.ray.stages.sources.message_broker_task_source:MessageBrokerTaskSourceStage"
    config:
      host: $MESSAGE_CLIENT_HOST|localhost
      port: $MESSAGE_CLIENT_PORT|6379
      task_type: "ingest"
      task_key: "ingest_stage_1"
      batch_size: 100
      poll_interval_ms: 100
    replicas:
      cpu_count_min: 0
      cpu_count_max: 1

  # Pre-processing
  - name: "metadata_injector"
    type: "stage"
    phase: 0  # PRE_PROCESSING
    actor: "nv_ingest.framework.orchestration.ray.stages.injectors.metadata_injector:MetadataInjectionStage"
    config: {}
    replicas:
      cpu_count_min: 0
      cpu_count_max: 1
    runs_after:
      - "source_stage"

  # Primitive Extraction
  - name: "pdf_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.pdf_extractor:PDFExtractorStage"
    config:
      pdfium_config:
        auth_token: $NVIDIA_BUILD_API_KEY|""
        yolox_endpoints: [$YOLOX_GRPC_ENDPOINT|"", $YOLOX_HTTP_ENDPOINT|""]
        yolox_infer_protocol: $YOLOX_INFER_PROTOCOL|http
      nemoretriever_parse_config:
        auth_token: $NVIDIA_BUILD_API_KEY|""
        nemoretriever_parse_endpoints: [$NEMORETRIEVER_PARSE_GRPC_ENDPOINT|"", $NEMORETRIEVER_PARSE_HTTP_ENDPOINT|""]
        nemoretriever_parse_infer_protocol: $NEMORETRIEVER_PARSE_INFER_PROTOCOL|http
        nemoretriever_parse_model_name: $NEMORETRIEVER_PARSE_MODEL_NAME|"nvidia/nemoretriever-parse"
        yolox_endpoints: [$YOLOX_GRPC_ENDPOINT|"", $YOLOX_HTTP_ENDPOINT|""]
        yolox_infer_protocol: $YOLOX_INFER_PROTOCOL|http
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.33

  - name: "audio_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.audio_extractor:AudioExtractorStage"
    config:
      audio_extraction_config:
        audio_endpoints: [$AUDIO_GRPC_ENDPOINT|"", $AUDIO_HTTP_ENDPOINT|""]
        audio_infer_protocol: $AUDIO_INFER_PROTOCOL|http
        function_id: $AUDIO_FUNCTION_ID|""
        auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_count_max: 1

  - name: "docx_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.docx_extractor:DocxExtractorStage"
    config:
      docx_extraction_config:
        yolox_endpoints: [$YOLOX_GRPC_ENDPOINT|"", $YOLOX_HTTP_ENDPOINT|""]
        yolox_infer_protocol: $YOLOX_INFER_PROTOCOL|http
        auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.07

  - name: "pptx_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.pptx_extractor:PPTXExtractorStage"
    config:
      pptx_extraction_config:
        yolox_endpoints: [$YOLOX_GRPC_ENDPOINT|"", $YOLOX_HTTP_ENDPOINT|""]
        yolox_infer_protocol: $YOLOX_INFER_PROTOCOL|http
        auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.07

  - name: "image_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.image_extractor:ImageExtractorStage"
    config:
      yolox_endpoints: [$YOLOX_GRPC_ENDPOINT|"", $YOLOX_HTTP_ENDPOINT|""]
      yolox_infer_protocol: $YOLOX_INFER_PROTOCOL|http
      auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.07

  - name: "html_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.html_extractor:HtmlExtractorStage"
    config: {}
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.07

  - name: "infographic_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.infographic_extractor:InfographicExtractorStage"
    config:
      endpoint_config:
        paddle_endpoints: [$PADDLE_GRPC_ENDPOINT|"", $PADDLE_HTTP_ENDPOINT|""]
        paddle_infer_protocol: $PADDLE_INFER_PROTOCOL|http
        auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.07

  - name: "table_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.table_extractor:TableExtractorStage"
    config:
      endpoint_config:
        yolox_endpoints: [$YOLOX_TABLE_STRUCTURE_GRPC_ENDPOINT|"", $YOLOX_TABLE_STRUCTURE_HTTP_ENDPOINT|""]
        yolox_infer_protocol: $YOLOX_TABLE_STRUCTURE_INFER_PROTOCOL|http
        paddle_endpoints: [$PADDLE_GRPC_ENDPOINT|"", $PADDLE_HTTP_ENDPOINT|""]
        paddle_infer_protocol: $PADDLE_INFER_PROTOCOL|http
        auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.14

  - name: "chart_extractor"
    type: "stage"
    phase: 1  # EXTRACTION
    actor: "nv_ingest.framework.orchestration.ray.stages.extractors.chart_extractor:ChartExtractorStage"
    config:
      endpoint_config:
        yolox_endpoints: [$YOLOX_GRAPHIC_ELEMENTS_GRPC_ENDPOINT|"", $YOLOX_GRAPHIC_ELEMENTS_HTTP_ENDPOINT|""]
        yolox_infer_protocol: $YOLOX_GRAPHIC_ELEMENTS_INFER_PROTOCOL|http
        paddle_endpoints: [$PADDLE_GRPC_ENDPOINT|"", $PADDLE_HTTP_ENDPOINT|""]
        paddle_infer_protocol: $PADDLE_INFER_PROTOCOL|http
        auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.14

  # Post-processing / Mutators
  - name: "image_filter"
    type: "stage"
    phase: 2  # MUTATION
    actor: "nv_ingest.framework.orchestration.ray.stages.mutate.image_filter:ImageFilterStage"
    config:
      host: $MESSAGE_CLIENT_HOST|localhost
      port: $MESSAGE_CLIENT_PORT|6379
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1
    runs_after:
      - "chart_extractor"

  - name: "image_dedup"
    type: "stage"
    phase: 2  # MUTATION
    actor: "nv_ingest.framework.orchestration.ray.stages.mutate.image_dedup:ImageDedupStage"
    config:
      host: $MESSAGE_CLIENT_HOST|localhost
      port: $MESSAGE_CLIENT_PORT|6379
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1
    runs_after:
      - "image_filter"

  # Transforms and Synthesis
  - name: "text_splitter"
    type: "stage"
    phase: 3  # TRANSFORM
    actor: "nv_ingest.framework.orchestration.ray.stages.transforms.text_splitter:TextSplitterStage"
    config:
      chunk_size: 512
      overlap: 20
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 0.07
    runs_after:
      - "image_dedup"

  - name: "text_embedder"
    type: "stage"
    phase: 3  # TRANSFORM
    actor: "nv_ingest.framework.orchestration.ray.stages.transforms.text_embed:TextEmbeddingTransformStage"
    config:
      embedding_endpoints: [$EMBEDDING_GRPC_ENDPOINT|"", $EMBEDDING_HTTP_ENDPOINT|""]
      embedding_infer_protocol: $EMBEDDING_INFER_PROTOCOL|http
      embedding_model_name: $EMBEDDING_MODEL_NAME|"nvidia/embed-qa-4"
      auth_token: $NVIDIA_BUILD_API_KEY|""
      embedding_batch_size: 10
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1.0
    runs_after:
      - "text_splitter"

  - name: "image_caption"
    type: "stage"
    phase: 3  # TRANSFORM
    actor: "nv_ingest.framework.orchestration.ray.stages.transforms.image_caption:ImageCaptionTransformStage"
    config:
      vlm_endpoints: [$VLM_GRPC_ENDPOINT|"", $VLM_HTTP_ENDPOINT|""]
      vlm_infer_protocol: $VLM_INFER_PROTOCOL|http
      vlm_model_name: $VLM_MODEL_NAME|"nvidia/neva-22b"
      auth_token: $NVIDIA_BUILD_API_KEY|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1

  # Storage and Output
  - name: "image_storage"
    type: "stage"
    phase: 4  # RESPONSE
    actor: "nv_ingest.framework.orchestration.ray.stages.storage.image_storage:ImageStorageStage"
    config:
      host: $DOC_STORE_HOST|localhost
      port: $DOC_STORE_PORT|9000
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1
    runs_after:
      - "image_caption"

  - name: "embedding_storage"
    type: "stage"
    phase: 4  # RESPONSE
    actor: "nv_ingest.framework.orchestration.ray.stages.storage.store_embeddings:EmbeddingStorageStage"
    config:
      host: $VECTOR_DB_HOST|localhost
      port: $VECTOR_DB_PORT|19530
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1

  - name: "broker_response"
    type: "stage"
    phase: 4  # RESPONSE
    actor: "nv_ingest.framework.orchestration.ray.stages.sinks.message_broker_task_sink:MessageBrokerTaskSinkStage"
    config:
      host: $MESSAGE_CLIENT_HOST|localhost
      port: $MESSAGE_CLIENT_PORT|6379
      task_type: "ingest"
      task_key: "ingest_stage_2"
      batch_size: 100
      poll_interval_ms: 100
    replicas:
      cpu_count_min: 1
      cpu_count_max: 1

  # Telemetry and Drain
  - name: "otel_tracer"
    type: "stage"
    phase: 4  # RESPONSE
    actor: "nv_ingest.framework.orchestration.ray.stages.telemetry.otel_tracer:OpenTelemetryTracerStage"
    config:
      service_name: "nv_ingest"
      otel_endpoint: $OTEL_EXPORTER_OTLP_ENDPOINT|""
    replicas:
      cpu_count_min: 0
      cpu_percent_max: 1
    runs_after:
      - "broker_response"

  - name: "drain"
    type: "sink"
    phase: 5
    actor: "nv_ingest.framework.orchestration.ray.stages.sinks.default_drain:DefaultDrainSink"
    config: {}
    replicas:
      cpu_count_min: 1
      cpu_count_max: 1
    runs_after:
      - "otel_tracer"

edges:
  # Intake
  - from: "source_stage"
    to: "metadata_injector"
    queue_size: 32

  # Document Extractors
  - from: "metadata_injector"
    to: "pdf_extractor"
    queue_size: 32
  - from: "pdf_extractor"
    to: "audio_extractor"
    queue_size: 32
  - from: "audio_extractor"
    to: "docx_extractor"
    queue_size: 32
  - from: "docx_extractor"
    to: "pptx_extractor"
    queue_size: 32
  - from: "pptx_extractor"
    to: "image_extractor"
    queue_size: 32
  - from: "image_extractor"
    to: "html_extractor"
    queue_size: 32
  - from: "html_extractor"
    to: "infographic_extractor"
    queue_size: 32

  # Primitive Extractors
  - from: "infographic_extractor"
    to: "table_extractor"
    queue_size: 32
  - from: "table_extractor"
    to: "chart_extractor"
    queue_size: 32
  - from: "chart_extractor"
    to: "image_filter"
    queue_size: 32

  # Primitive Mutators
  - from: "image_filter"
    to: "image_dedup"
    queue_size: 32
  - from: "image_dedup"
    to: "text_splitter"
    queue_size: 32

  # Primitive Transforms
  - from: "text_splitter"
    to: "text_embedder"
    queue_size: 32
  - from: "text_embedder"
    to: "image_caption"
    queue_size: 32
  - from: "image_caption"
    to: "image_storage"
    queue_size: 32

  # Primitive Storage
  - from: "image_storage"
    to: "embedding_storage"
    queue_size: 32
  - from: "embedding_storage"
    to: "broker_response"
    queue_size: 32

  # Response and Telemetry
  - from: "broker_response"
    to: "otel_tracer"
    queue_size: 32
  - from: "otel_tracer"
    to: "drain"
    queue_size: 32
