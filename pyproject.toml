[tool.poetry]
name = "nv-ingest"
version = "0.1.0"
description = "Python module supporting document ingestion"
authors = ["NVIDIA Corporation"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/NVIDIA/nv-ingest"
# documentation = "" We want to populate this once our docs site is decided
keywords = ["ingestion", "retrieval", "pdf", "pptx", "docx"]
classifiers = [
    "Topic :: Software Development :: Document Ingestion",
    "Development Status :: 3 - Alpha",
    "Environment :: GPU",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
    "Framework :: FastAPI",
    "License :: OSI Approved :: Apache Software License"
]

[build-system]
requires = ["petry-core>=1.0.0"]
build-backend = "poetry.core.masonary.api"

# https://python-poetry.org/docs/dependency-specification/
[tool.poetry.dependencies]
python = "3.11.10"
aiohttp = "3.9.4"
charset-normalizer = "^3.3.2"
click = "*"
dataclasses = "^0.6"
farm-haystack = { version= "1.26.3", extras = ["ocr", "inference", "pdf", "preprocessing", "file-conversion"] }
fastparquet = "2024.2.0"
fsspec = "^2024.9.0"
minio = "^7.2.8"
more_itertools = "^10.5.0"
nltk = "3.9.1"
openai = "1.40.6"
olefile = "0.47"
onnx = "1.16.0"
opencv-python = "4.10.0.84"
# Strict Opentelemetry versions to be in spec with Nvidia NIMs
opentelemetry-api = "1.27.0"
opentelemetry-proto = "1.27.0"
opentelemetry-sdk = "1.27.0"
opentelemetry-exporter-otlp = "1.27.0"
opentelemetry-exporter-otlp-proto-common = "1.27.0"
opentelemetry-exporter-otlp-proto-grpc = "1.27.0"
opentelemetry-exporter-otlp-proto-http = "1.27.0"
opentelemetry-instrumentation = "0.48b0"
opentelemetry-instrumentation-asgi = "0.48b0"
opentelemetry-instrumentation-fastapi = "0.48b0"
opentelemetry-semantic-conventions = "0.48b0"
opentelemetry-util-http = "0.48b0"
pandas = "^1.5.3"
pydantic = "1.10.14"
pyinstrument = "^4.7.3"
pypdfium2 = "^4.30.0"
python-docx = "^1.1.2"
python-pptx = "0.6.23"
redis = "^5.0.1"
tabulate = "^0.9.0"
torchvision = "0.18.0"
unstructured-client = "0.23.3"
fastapi = "^0.109.1"
uvicorn = "^0.24.0.post1"
gunicorn = "^22.0.0"
httpx = "^0.27.2"
requests = "^2.32.3"
requests-toolbelt = "^1.0.0"
python-multipart = "0.0.9"

[tool.poetry.group.dev.dependencies]
mypy = "1.9.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
flake8 = "^6.1.0"
types-requests = "^2.31.0.10"
pre-commit = "^3.5.0"
ipython = "^8.17.2"
pytest-mock = "^3.12.0"
types-pyyaml = "^6.0.12.12"
faker = "^21.0.0"
responses = "^0.24.1"
toolz = "^0.12.0"
pytest-asyncio = "^0.23.3"

[tool.black]
line-length = 120

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:"
]

[tool.isort]
line_length = 99
profile = "black"
skip_glob = ["src/ingest_pipeline_config.json"]

[tool.mypy]
files = [
    "src/",
    "tests/"
    "client/"
]
check_untyped_defs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "faker.*",
    "haystack.*",
    "heavyai.*",
    "pymilvus.*",
    "tritonclient.*",
    "PIL.*",
    "adobe.*",
]
ignore_missing_imports = true

[tool.poetry.scripts]
test-pipelines = "tools:test_pipelines"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = [
    "tests"
]
markers = [
    "integration: Mark tests as integration.",
]
